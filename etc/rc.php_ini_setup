#!/bin/sh
#
#	rc.php_ini_setup
#	Copyright (C)2008 Scott K Ullrich <sullrich@gmail.com>
#	All rights reserved.
#
#	Redistribution and use in source and binary forms, with or without
#	modification, are permitted provided that the following conditions are met:
#
#	1. Redistributions of source code must retain the above copyright notice,
#	   this list of conditions and the following disclaimer.
#
#	2. Redistributions in binary form must reproduce the above copyright
#	   notice, this list of conditions and the following disclaimer in the
#	   documentation and/or other materials provided with the distribution.
#
#	THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
#	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
#	AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#	AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
#	OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#	SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#	INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#	CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#	ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#	POSSIBILITY OF SUCH DAMAGE.

# Set our operating platform
PLATFORM=`cat /etc/platform`
EXTENSIONSDIR="/usr/local/lib/php/20060613/"
APCSHMEMSIZE="25"

# Set upload directory
if [ "$PLATFORM" = "embedded" ]; then
	UPLOADTMPDIR="/root"
elif [ "$PLATFORM" = "embedded" ] ; then
	UPLOADTMPDIR="/root"
else 
	UPLOADTMPDIR="/tmp"
fi

# Define php modules.  Do not add .so, it will  
# be done automatically by the script below.
PHPMODULES="apc \
	bcmath \
	bz2 \
	ctype \
	curl \
	date \
	json \
	gettext \
	ldap \
	libxml \
	mbstring \
	mhash \
	mysql \
	openssl \
	pcntl \
	pcre \
	posix \
	readline \
	Reflection \
	session \
	shmop \
	standard \
	sysvmsg \
	sysvsem \
	sysvshm \
	sqlite \
	tokenizer \ 
	uploadprogress \
	xml \
	zlib"

# Get a loaded module list in the stock php
if [ -f /usr/local/etc/php.ini ]; then
	rm /usr/local/etc/php.ini
fi
if [ -f /usr/local/lib/php.ini ]; then
	rm /usr/local/lib/php.ini
fi
LOADED_MODULES=`php -m | grep -v "\["`

# Populate a dummy php.ini to avoid
# the file being clobbered and the firewall
# not being able to boot back up.
cat >/usr/local/lib/php.ini <<EOF
; File generated from /etc/rc.php_ini_setup
output_buffering = "0"
expose_php = Off
implicit_flush = true
magic_quotes_gpc = Off
max_execution_time = 99999999
max_input_time = 99999999
register_argc_argv = On
file_uploads = On
upload_tmp_dir = ${UPLOADTMPDIR}
upload_max_filesize = 100M
post_max_size = 100M
html_errors = Off
zlib.output_compression = On
zlib.output_compression_level = 1
include_path = ".:/etc/inc:/usr/local/www:/usr/local/captiveportal:/usr/local/pkg"
uploadprogress.file.filename_template = /tmp/uploadprogress_%s.txt
extension_dir=${EXTENSIONSDIR}

; Extensions
EOF

# Loop through and generate modules to load.
# Take into account modules built into php.
for EXT in $PHPMODULES; do
	SHOULDADD="true"
	# Check to see if module is compiled into php statically
	for LM in $LOADED_MODULES; do
		if [ "$EXT" = "$LM" ]; then
			SHOULDADD="false"
		fi
	done
	if [ "$SHOULDADD" = "true" ]; then
		# Ensure extension exists before adding.
		if [ -f "${EXTENSIONSDIR}${EXT}.so" ]; then
			echo "extension=${EXT}.so" >> /usr/local/lib/php.ini
		fi
	fi
done

# Get amount of ram installed on this system
RAM=`sysctl hw.realmem | awk '{print $2/1000000}' | awk -F '.' '{print $1}'`
export RAM
if [  $RAM -gt 96 ]; then

	cat >>/usr/local/lib/php.ini <<EOF

; APC Settings
apc.enabled="1"
apc.enable_cli="1"
apc.shm_size="${APCSHMEMSIZE}"

EOF

else 

	echo ">>> WARNING!  under 128 megabytes of ram detected.  Not enabling APC."
	echo ">>> WARNING!  under 128 megabytes of ram detected.  Not enabling APC." | logger -p daemon.info -i -t rc.php_ini_setup

fi

# Copy php.ini file to etc/ too (cli)
cp /usr/local/lib/php.ini /usr/local/etc/php.ini

# Remove old log file if it exists.
if [ -f /var/run/php_modules_load_errors.txt ]; then
	rm /var/run/php_modules_load_errors.txt
fi 

# Check loaded modules and remove anything that did not load correctly
LOADED_MODULES=`php -m 2>/dev/null | grep -v "\["`
for EXT in $PHPMODULES; do
	SHOULDREMOVE="true"
	for LM in $LOADED_MODULES; do
		if [ "$EXT" = "$LM" ]; then
			SHOULDREMOVE="false"
		fi		
	done
	if [ "$SHOULDREMOVE" = "true" ]; then
		if [ -f "${EXTENSIONSDIR}${EXT}.so" ]; then
			echo ">>> ${EXT} did not load correctly.  Removing from php.ini..." >> /var/run/php_modules_load_errors.txt
			cat /usr/local/lib/php.ini | grep -v $EXT > /tmp/php.ini
			mv /tmp/php.ini /usr/local/lib/php.ini
		fi
	fi
done

# Copy php.ini file to etc/ too (cli)
cp /usr/local/lib/php.ini /usr/local/etc/php.ini




